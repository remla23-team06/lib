on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: curl -sSL https://install.python-poetry.org | python3 - --version=1.5.0

      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: 'poetry'

      - name: Install dependencies
        run: poetry -vv install --no-interaction --no-ansi

      - name: Run Pylint
        run: poetry run pylint src tests


  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: curl -sSL https://install.python-poetry.org | python3 - --version=1.5.0

      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: 'poetry'

      - name: Install dependencies
        run: poetry -vv install --no-interaction --no-ansi

      - name: Add current directory to PYTHONPATH
        run: |
          echo "PYTHONPATH=$PWD" >> "$GITHUB_ENV"

      - name: Create nltk_data directory
        run: mkdir ${{ github.workspace }}/nltk_data

      - name: Set NLTK_DATA to folder in repo
        run: |
          echo "NLTK_DATA=${{ github.workspace }}/nltk_data" >> "$GITHUB_ENV"

      - name: Run tests
        run: poetry run pytest

  docker_build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Docker build
        run: docker build . -t lib-pr-ci


  poetry_build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: curl -sSL https://install.python-poetry.org | python3 - --version=1.5.0
      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: 'poetry'
      - name: Install dependencies
        run: poetry -vv install --no-interaction --no-ansi
      - name: Poetry build
        run: poetry build



